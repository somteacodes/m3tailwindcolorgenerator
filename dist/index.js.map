{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {\n    argbFromHex,\n    hexFromArgb,\n    customColor,\n    SchemeContent,\n    Hct,\n    MaterialDynamicColors,\n    SchemeExpressive,\n    SchemeFidelity,\n    SchemeMonochrome,\n    SchemeNeutral,\n    SchemeTonalSpot,\n    SchemeVibrant,\n    DynamicColor,\n  } from \"@material/material-color-utilities\";\n  \n  type ColorConfig = {\n    hex?: string;\n    harmonize?: boolean;\n  };\n  \n  type ColorsMap = {\n    primary: string;\n    [key: string]: string | ColorConfig;\n  };\n  \n  type ThemeConfig = {\n    scheme: string;\n    contrast: number;\n  };\n  \n  type SchemeObject =\n    | SchemeContent\n    | SchemeExpressive\n    | SchemeFidelity\n    | SchemeMonochrome\n    | SchemeNeutral\n    | SchemeTonalSpot\n    | SchemeVibrant;\n  \n  const toKebabCase = (str: string): string => {\n    return str\n      .split(\"\")\n      .map((char, index) => {\n        return char.toUpperCase() === char\n          ? `${index !== 0 ? \"-\" : \"\"}${char.toLowerCase()}`\n          : char;\n      })\n      .join(\"\");\n  };\n  \n  const getSchemeObject = (\n    scheme: string,\n    source: number,\n    isDark: boolean,\n    contrast: number\n  ): SchemeObject => {\n    const SchemeObjects: Record<\n      string,\n      new (hct: Hct, isDark: boolean, contrast: number) => SchemeObject\n    > = {\n      content: SchemeContent,\n      expressive: SchemeExpressive,\n      fidelity: SchemeFidelity,\n      monochrome: SchemeMonochrome,\n      neutral: SchemeNeutral,\n      tonalSpot: SchemeTonalSpot,\n      vibrant: SchemeVibrant,\n    };\n  \n    const SchemeClass = SchemeObjects[scheme] || SchemeObjects.content;\n    return new SchemeClass(Hct.fromInt(source), isDark, contrast);\n  };\n  const AllMaterialDynamicColors: Record<\n    string,\n    (typeof MaterialDynamicColors)[keyof typeof MaterialDynamicColors]\n  > = {\n    background: MaterialDynamicColors.background,\n    onBackground: MaterialDynamicColors.onBackground,\n    surface: MaterialDynamicColors.surface,\n    surfaceDim: MaterialDynamicColors.surfaceDim,\n    surfaceBright: MaterialDynamicColors.surfaceBright,\n    surfaceContainerLowest: MaterialDynamicColors.surfaceContainerLowest,\n    surfaceContainerLow: MaterialDynamicColors.surfaceContainerLow,\n    surfaceContainer: MaterialDynamicColors.surfaceContainer,\n    surfaceContainerHigh: MaterialDynamicColors.surfaceContainerHigh,\n    surfaceContainerHighest: MaterialDynamicColors.surfaceContainerHighest,\n    onSurface: MaterialDynamicColors.onSurface,\n    surfaceVariant: MaterialDynamicColors.surfaceVariant,\n    onSurfaceVariant: MaterialDynamicColors.onSurfaceVariant,\n    inverseSurface: MaterialDynamicColors.inverseSurface,\n    onInverseSurface: MaterialDynamicColors.inverseOnSurface,\n    outline: MaterialDynamicColors.outline,\n    outlineVariant: MaterialDynamicColors.outlineVariant,\n    primary: MaterialDynamicColors.primary,\n    onPrimary: MaterialDynamicColors.onPrimary,\n    primaryContainer: MaterialDynamicColors.primaryContainer,\n    onPrimaryContainer: MaterialDynamicColors.onPrimaryContainer,\n    inversePrimary: MaterialDynamicColors.inversePrimary,\n    secondary: MaterialDynamicColors.secondary,\n    onSecondary: MaterialDynamicColors.onSecondary,\n    secondaryContainer: MaterialDynamicColors.secondaryContainer,\n    onSecondaryContainer: MaterialDynamicColors.onSecondaryContainer,\n    tertiary: MaterialDynamicColors.tertiary,\n    onTertiary: MaterialDynamicColors.onTertiary,\n    tertiaryContainer: MaterialDynamicColors.tertiaryContainer,\n    onTertiaryContainer: MaterialDynamicColors.onTertiaryContainer,\n    error: MaterialDynamicColors.error,\n    onError: MaterialDynamicColors.onError,\n    errorContainer: MaterialDynamicColors.errorContainer,\n    onErrorContainer: MaterialDynamicColors.onErrorContainer,\n    scrim: MaterialDynamicColors.scrim,\n    shadow: MaterialDynamicColors.shadow,\n    surfaceTint: MaterialDynamicColors.surfaceTint,\n  };\n  \n  const generateColors = (\n    colorsMap: ColorsMap,\n    themeConfig: ThemeConfig = { scheme: \"content\", contrast: 0 },\n    isDark = false,\n    useKebabCase = false\n  ): Record<string, string> => {\n    const { primary, ...extraColors } = colorsMap;\n    const { scheme, contrast } = themeConfig;\n  \n    const source = argbFromHex(primary);\n    const colorScheme = getSchemeObject(scheme, source, isDark, contrast);\n  \n    const colors: Record<string, string> = {};\n  \n    Object.entries(AllMaterialDynamicColors).forEach(([name, colorName]) => {\n      const hex = hexFromArgb((colorName as DynamicColor).getArgb(colorScheme));\n  \n      if (useKebabCase) {\n        const kebabName = toKebabCase(name);\n        colors[kebabName] = hex;\n      } else {\n        colors[name] = hex;\n      }\n    });\n  \n    Object.entries(extraColors).forEach(([colorName, value]) => {\n      const colorConfig: ColorConfig =\n        typeof value === \"string\" ? { hex: value } : value;\n      const hex = colorConfig.hex || \"\";\n      const blend = colorConfig.harmonize ?? true;\n      const customScheme = customColor(source, {\n        value: argbFromHex(hex),\n        blend,\n        name: \"\",\n      })[isDark ? \"dark\" : \"light\"];\n  \n      if (useKebabCase) {\n        const kebabName = toKebabCase(colorName);\n        colors[kebabName] = hexFromArgb(customScheme.color);\n        colors[`on-${kebabName}`] = hexFromArgb(customScheme.onColor);\n        colors[`${kebabName}-container`] = hexFromArgb(\n          customScheme.colorContainer\n        );\n        colors[`on-${kebabName}-container`] = hexFromArgb(\n          customScheme.onColorContainer\n        );\n      } else {\n        const camelCaseName =\n          colorName.charAt(0).toUpperCase() + colorName.slice(1);\n        colors[colorName] = hexFromArgb(customScheme.color);\n        colors[`on${camelCaseName}`] = hexFromArgb(customScheme.onColor);\n        colors[`${camelCaseName}Container`] = hexFromArgb(\n          customScheme.colorContainer\n        );\n        colors[`on${camelCaseName}Container`] = hexFromArgb(\n          customScheme.onColorContainer\n        );\n      }\n    });\n  \n    return colors;\n  };\n  \n  const M3TailwindConfigColors = (\n    colorsMap: ColorsMap,\n    themeConfig: ThemeConfig,\n    useKebabCase: boolean = true\n  ): Record<string, { DEFAULT: string; dark: string }> => {\n    const lightColors = generateColors(\n      colorsMap,\n      themeConfig,\n      false,\n      useKebabCase\n    );\n    const darkColors = generateColors(colorsMap, themeConfig, true, useKebabCase);\n  \n    const colors: Record<string, { DEFAULT: string; dark: string }> = {};\n    Object.keys(lightColors).forEach((key) => {\n      colors[key] = {\n        DEFAULT: lightColors[key],\n        dark: darkColors[key],\n      };\n    });\n  \n    return colors;\n  };\n  \n  const M3TailwindColors = (\n    colorsMap: ColorsMap,\n    themeConfig: ThemeConfig,\n    useKebabCase: boolean = true\n  ): { light: Record<string, string>; dark: Record<string, string> } => {\n    return {\n      light: generateColors(colorsMap, themeConfig, false, useKebabCase),\n      dark: generateColors(colorsMap, themeConfig, true, useKebabCase),\n    };\n  };\n   \n  export { M3TailwindColors, M3TailwindConfigColors };\n  "],"names":["SchemeContent","SchemeExpressive","SchemeFidelity","SchemeMonochrome","SchemeNeutral","SchemeTonalSpot","SchemeVibrant","Hct","MaterialDynamicColors","argbFromHex","hexFromArgb","customColor"],"mappings":"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"}